This package is used internally by the Department of Computational Perception,
Johannes Kepler University, Linz, Austria (http://www.cp.jku.at) and the
Austrian Research Institute for Artificial Intelligence (OFAI), Vienna, Austria
(http://www.ofai.at).

License:
--------

Unless indicated otherwise, all source code files are published under the BSD
license and all data/model files under the Creative Commons BY-NC-SA license.
For details, please see the LICENSE file.

If you want to include any of the provided technology in a commercial product,
please contact Gerhard Widmer at gerhard.widmer@jku.at.

Installation:
-------------

To use this package without installing it, make sure this directory is in your
$PYTHONPATH, e.g. by the following command (if your are in the directory
containing this README file):

export PYTHONPATH=`pwd`:$PYTHONPATH

Most modules work in Python-only mode, but some require to be compiled with
cython. To do so, please run:

python setup.py build_ext --inplace

You can also build and install this package by running:

python setup.py build
python setup.py install

You might need higher privileges (use su or sudo) to install the files to a
common place like '/usr/local' or similar. Alternatively you can install the
package locally by adding the '--user' argument:

python setup.py install --user

Please make sure that all modules are up to date, especially those mentioned
in requirements.txt must be the specific version (or newer), otherwise it can
result in unexpected errors or false computations!

The package does work out of the box with .wav audio files with a sample rate
of 44.1kHz and 16 bit depth. If other sound formats should be used, ffmpeg (or
avconv on Ubuntu Linux) must be installed on the system.

Notes:
------

All features can change without prior notice. Do NOT expect these to stay the
same forever! If you need stable features, create a branch, set the parameters
accordingly and pickle the processors.

If you get segfaults on Mac OS X systems, please check if numpy and scipy use
ATLAS instead of Apple's own Accelerate framework or use the a single thread
(i.e. use the "-j 1" switch).

If you get errors pointing to any .pyx file, please recompile (see above)
before investigating this error further.

If you get a "cPickle.PicklingError: Can't pickle <type 'instancemethod'>"
error, make sure that you use only one thread (i.e. use the "-j 1" switch),
otherwise ParallelProcessors can not be pickled.
